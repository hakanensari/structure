class Measure < Data
  def self.new: (amount: untyped, unit: untyped) -> Measure
              | (untyped, untyped) -> Measure

  def self.[]: (amount: untyped, unit: untyped) -> Measure
             | (untyped, untyped) -> Measure

  def self.members: () -> [ :amount, :unit ]

  def self.parse: (?Hash[String | Symbol, untyped], **untyped) -> Measure

  attr_reader amount: untyped
  attr_reader unit: untyped
  def members: () -> [ :amount, :unit ]

  def to_h: () -> { amount: untyped, unit: untyped }
end
