module Structure
  def self.new: () ?{ () [self: Structure::Builder] -> void } -> singleton(Data)

  module ClassMethods
    def parse: (?(Hash[String | Symbol, untyped] | nil) data, **untyped kwargs) -> instance
    def members: () -> Array[Symbol]
    def __structure_meta__: () -> {
      attributes: Array[Symbol],
      types: Hash[Symbol, untyped],
      defaults: Hash[Symbol, untyped],
      from: Hash[Symbol, String]
    }
  end

  module InstanceMethods
    def deconstruct: () -> Array[untyped]
    def deconstruct_keys: (Array[Symbol]?) -> Hash[Symbol, untyped]
    def with: (**untyped) -> instance
    def to_h: () -> Hash[Symbol, untyped]
  end
end
