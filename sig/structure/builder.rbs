module Structure
  class Builder
    def attribute: (Symbol name, untyped type, ?from: String, ?default: untyped) ?{ (untyped) -> untyped } -> void
                 | (Symbol name, ?from: String, ?default: untyped) ?{ (untyped) -> untyped } -> void

    def after_parse: () { (Data) -> void } -> void

    # Methods used by the factory after the block
    def attributes: () -> Array[Symbol]
    def mappings: () -> Hash[Symbol, String]
    def types: () -> Hash[Symbol, untyped]
    def defaults: () -> Hash[Symbol, untyped]
    def coercions: () -> Hash[Symbol, Proc]
    def predicate_methods: () -> Hash[Symbol, Symbol]
    def after_parse_callback: () -> (Proc | nil)
  end
end
