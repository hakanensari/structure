module Structure
  module Types
    interface _ParseableClass
      def parse: (untyped) -> untyped
    end

    BOOLEAN_TRUTHY: Set[untyped]

    self.@boolean: Proc
    self.@kernel_cache: Hash[untyped, Proc]
    self.@parseable_cache: Hash[untyped, Proc]
    self.@string_class_cache: Hash[Array[untyped], Proc]

    def self.coerce: (untyped type, ?untyped? context) -> untyped

    private def self.boolean: () -> Proc
    private def self.self_referential: (_ParseableClass context) -> Proc
    private def self.lazy_class: (String class_name, untyped? context) -> Proc
    private def self.array: (untyped element_type, ?untyped? context) -> Proc
    private def self.parseable: (untyped type) -> Proc
    private def self.kernel: (Class type) -> Proc
    private def self.parse: (untyped val) -> untyped
    private def self.resolve_class: (String class_name, untyped? context) -> _ParseableClass
  end
end
